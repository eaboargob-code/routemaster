rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // --- helpers ---
    function authed()       { return request.auth != null; }
    function me()           { return get(/databases/$(db)/documents/users/$(request.auth.uid)); }
    function hasMe()        { return authed() && exists(/databases/$(db)/documents/users/$(request.auth.uid)); }
    function myRole()       { return hasMe() ? me().data.role : null; }
    function mySchool()     { return hasMe() ? me().data.schoolId : null; }
    function isAdmin()      { return myRole() == "admin"; }
    function isDriver()     { return myRole() == "driver"; }

    // --- users ---
    match /users/{uid} {
      // Admins can manage users in their school
      allow read, write: if isAdmin() && (
        (resource != null && resource.data.schoolId == mySchool()) ||
        (request.resource.data.schoolId == mySchool())
      );

      // Any user can read their own profile
      allow get: if authed() && request.auth.uid == uid;
    }

    // --- routes ---
    match /routes/{id} {
      // Admins can manage routes in their school
      allow read, write: if isAdmin() && (
        (resource != null && resource.data.schoolId == mySchool()) ||
        (request.resource.data.schoolId == mySchool())
      );

      // Drivers can read routes from their school
      allow get: if isDriver() && resource.data.schoolId == mySchool();
      allow list: if isDriver(); // Drivers can list routes, but must filter client-side
    }

    // --- buses ---
    match /buses/{id} {
      // Admins can manage buses in their school
      allow read, write: if isAdmin() && (
        (resource != null && resource.data.schoolId == mySchool()) ||
        (request.resource.data.schoolId == mySchool())
      );

      // Drivers can read buses assigned to them
      allow get: if isDriver() && resource.data.driverId == request.auth.uid;
      allow list: if isDriver(); // Drivers can list buses, but must filter client-side
    }

    // --- trips ---
    match /trips/{id} {
      // Placeholder: no access yet
      allow read, write: if false;
    }
  }
}
