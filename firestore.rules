rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin of a specific school
    function isSchoolAdmin(schoolId) {
      let userProfile = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null &&
             userProfile.role == 'admin' &&
             userProfile.schoolId == schoolId;
    }

    match /users/{userId} {
      // Admins can manage users in their school.
      allow read, write: if isSchoolAdmin(resource.data.schoolId);
      // Users can read their own profile.
      allow get: if request.auth != null && request.auth.uid == userId;
    }

    match /buses/{busId} {
      // Admins of the school can read and write all buses.
      allow read, write: if isSchoolAdmin(resource.data.schoolId);

      // A driver can read a bus document if their UID is in the driverId field.
      // This covers both direct gets and queries like `where("driverId", "==", uid)`.
      allow list: if request.auth != null && request.query.driverId == request.auth.uid;
      allow get: if request.auth != null && resource.data.driverId == request.auth.uid;
    }

    match /routes/{routeId} {
      // Admins can manage all routes for their school.
      allow read, write: if isSchoolAdmin(resource.data.schoolId);
    }
  }
}
