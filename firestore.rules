rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    function getUserProfile() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isAdmin(schoolId) {
      let profile = getUserProfile();
      return isAuth() && profile.role == 'admin' && profile.schoolId == schoolId;
    }
    
    function isDriver() {
      let profile = getUserProfile();
      return isAuth() && profile.role == 'driver';
    }

    match /users/{userId} {
      // Users can read their own profile
      allow get: if isAuth() && request.auth.uid == userId;
      // Admins can list users in their school
      allow list: if isAdmin(getUserProfile().schoolId);
      // Admins can write/update users in their school
      allow write: if isAdmin(request.resource.data.schoolId);
    }

    match /routes/{routeId} {
      // Admins can manage routes in their school
      allow read, write: if isAdmin(getUserProfile().schoolId);
    }
    
    match /buses/{busId} {
      // An admin can read/list buses in their school
      allow read, write: if isAdmin(getUserProfile().schoolId);
      // A driver can read a bus if they are assigned to it.
      allow read: if isDriver() && resource.data.driverId == request.auth.uid;
    }

    match /trips/{tripId} {
        allow read, create: if isDriver() && request.resource.data.driverId == request.auth.uid;
        allow update: if isDriver() && get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == request.auth.uid;
    }
  }
}
