rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isSchoolAdmin(schoolId) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == schoolId;
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Admins can manage users in their school. Users can read their own profile.
      allow read, write: if isAuth() && (isSchoolAdmin(resource.data.schoolId) || request.auth.uid == userId);
    }

    // --- Routes Collection ---
    match /routes/{routeId} {
      // Admins can manage all routes for their school.
      allow read, write: if isAuth() && isSchoolAdmin(resource.data.schoolId);
    }
    
    // --- Buses Collection ---
    match /buses/{busId} {
      // Admins can manage all buses for their school.
      allow get, write: if isAuth() && isSchoolAdmin(resource.data.schoolId);
      
      // Drivers can query for the bus assigned to them.
      // This rule MUST match the query in the driver page.
      allow list: if isAuth() && 
                    request.query.driverId == request.auth.uid &&
                    request.query.schoolId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId;
    }
    
    // --- Trips Collection ---
    match /trips/{tripId} {
      // Admins can read all trips in their school. Drivers can create and read their own trips.
      allow read, create: if isAuth() && 
                             (isSchoolAdmin(resource.data.schoolId) || request.auth.uid == resource.data.driverId);
      // Drivers can update (end) their own trips.
      allow update: if isAuth() && request.auth.uid == resource.data.driverId;
    }

    // --- Default Deny ---
    // Deny all other access to collections not explicitly defined.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
