rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function mySchool() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId;
    }

    match /users/{uid} {
      // Admins can manage all users in their school
      allow read, write: if isSignedIn() && isRole('admin') && resource.data.schoolId == mySchool();
      // Users can read their own profile
      allow get: if isSignedIn() && request.auth.uid == uid;
      // Users can update their own profile (e.g. FCM tokens)
      allow update: if isSignedIn() && request.auth.uid == uid;
    }
    
    match /users/{uid}/inbox/{inboxId} {
       allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // Admins can manage all school-specific data
    match /{collection}/{docId} {
       allow read, write: if isSignedIn() 
                        && isRole('admin') 
                        && resource.data.schoolId == mySchool();
    }
    
    // Parents can read student info for their linked children
    match /students/{studentId} {
        allow get: if isSignedIn() && isRole('parent') 
                 && studentId in get(/databases/$(database)/documents/parentStudents/$(request.auth.uid)).data.studentIds;
    }
    
    // Parents can read their own link document
    match /parentStudents/{uid} {
        allow get: if isSignedIn() && request.auth.uid == uid;
    }
    
    match /trips/{tripId} {
      // Drivers and supervisors can read trip data if they are assigned
      allow get: if isSignedIn() && (
        (isRole('driver') && get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == request.auth.uid) ||
        (isRole('supervisor') && get(/databases/$(database)/documents/trips/$(tripId)).data.supervisorId == request.auth.uid)
      );
    }

    match /trips/{tripId}/passengers/{studentId} {
        // Driver/supervisor assigned to this trip can read/write all passenger statuses for their active trip.
        allow read, write: if isSignedIn() && (
            (isRole('driver') && get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == request.auth.uid) ||
            (isRole('supervisor') && get(/databases/$(database)/documents/trips/$(tripId)).data.supervisorId == request.auth.uid)
        );

        // A parent can read their own child's passenger status for any trip.
        allow get: if isSignedIn() && isRole('parent') 
                 && request.auth.uid in get(/databases/$(database)/documents/trips/$(tripId)/passengers/$(studentId)).data.parentUids;
    }
  }
}
