
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- HELPERS ---
    function isSignedIn() {
      return request.auth != null;
    }
    function myClaims() {
      return request.auth.token;
    }
    function myRole() {
      return myClaims().role;
    }
    function mySchool() {
      return myClaims().schoolId;
    }
    function isAdmin() {
      return isSignedIn() && myRole() == 'admin';
    }
    function isDriver() {
        return isSignedIn() && myRole() == 'driver';
    }
    function isSupervisor() {
        return isSignedIn() && myRole() == 'supervisor';
    }
    function isParent() {
        return isSignedIn() && myRole() == 'parent';
    }
    function trip() {
        // Use get() not getAfter() so it can be used for read/write/delete
        return get(/databases/$(database)/documents/trips/$(tripId));
    }
    function incomingTrip() {
        return request.resource.data;
    }
    
    // --- USERS ---
    match /users/{userId} {
      allow read: if isAdmin() && resource.data.schoolId == mySchool()
                  || request.auth.uid == userId;

      allow list: if isAdmin() && mySchool() != null;
      
      allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }
    
    // --- SCHOOLS (read-only) ---
    match /schools/{schoolId} {
      allow read: if isSignedIn() && schoolId == mySchool();
      allow write: if false; // Schools are managed externally
    }
    
    // --- ROUTES ---
    match /routes/{routeId} {
      allow read: if isSignedIn() && resource.data.schoolId == mySchool();
      allow list: if isAdmin() && mySchool() != null;
      allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }
    
    // --- BUSES ---
    match /buses/{busId} {
      allow read: if isSignedIn() && resource.data.schoolId == mySchool();
      allow list: if isAdmin() && mySchool() != null;
      allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }

    // --- STUDENTS ---
    match /students/{studentId} {
        allow read: if isSignedIn() && resource.data.schoolId == mySchool();
        allow list: if isAdmin() && mySchool() != null;
        allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }
    
    // --- PARENT-STUDENT LINKS ---
    match /parentStudents/{linkId} {
        allow read: if (isAdmin() || isSupervisor()) && resource.data.schoolId == mySchool()
                    || isParent() && resource.data.parentId == request.auth.uid;
        allow list: if (isAdmin() || isSupervisor()) && mySchool() != null;
        allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
        allow delete: if isAdmin() && resource.data.schoolId == mySchool();
    }
    
    // --- TRIPS ---
    match /trips/{tripId} {
      allow read: if isSignedIn() && resource.data.schoolId == mySchool();

      allow list: if isAdmin() && mySchool() != null;

      allow create: if (isDriver() || isSupervisor()) && incomingTrip().schoolId == mySchool();
      
      allow update: if isAdmin() && incomingTrip().schoolId == mySchool()
      							|| isDriver() && resource.data.driverId == request.auth.uid && incomingTrip().schoolId == mySchool()
                    || (
                      isSupervisor() && resource.data.schoolId == mySchool()
                      && resource.data.supervisorId == request.auth.uid
                      && request.resource.data.diff(resource.data).changedKeys().hasOnly(['counts','updatedAt'])
                    );
      
      match /passengers/{studentId} {
        allow read: if isSignedIn() && trip().data.schoolId == mySchool();
        allow write: if isAdmin() && trip().data.schoolId == mySchool()
                      || isDriver() && trip().data.driverId == request.auth.uid && trip().data.allowDriverAsSupervisor == true
                      || isSupervisor() && trip().data.supervisorId == request.auth.uid && trip().data.schoolId == mySchool();
        
        // No list access for passengers; they are a subcollection.
      }

      match /events/{eventId} {
        allow read, write: if isSignedIn() && trip().data.schoolId == mySchool();
      }
    }
  }
}
