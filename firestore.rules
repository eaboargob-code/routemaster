rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // ---------- helpers ----------
    function authed()     { return request.auth != null; }
    function me()         { return get(/databases/$(db)/documents/users/$(request.auth.uid)); }
    function hasMe()      { return authed() && me().exists(); }
    function myRole()     { return hasMe() ? me().data.role : null; }
    function mySchool()   { return hasMe() ? me().data.schoolId : null; }
    function isAdmin()    { return myRole() == "admin"; }
    function isDriver()   { return myRole() == "driver"; }

    // ---------- users ----------
    match /users/{uid} {
      // users can read their own profile
      allow read: if authed() && uid == request.auth.uid;

      // admins can read/write any user in their own school
      allow read, write: if isAdmin() && (
        (resource != null  && resource.data.schoolId == mySchool()) ||        // existing doc
        (request.resource != null && request.resource.data.schoolId == mySchool())    // creating/querying
      );
    }

    // ---------- routes ----------
    match /routes/{id} {
      // admin full control in their school
      allow read, write: if isAdmin() && (
        (resource != null  && resource.data.schoolId == mySchool()) ||
        (request.resource != null && request.resource.data.schoolId == mySchool())
      );

      // drivers may read routes in their school
      allow read: if isDriver() && resource.data.schoolId == mySchool();
    }

    // ---------- buses ----------
    match /buses/{id} {
      // admin full control in their school
      allow read, write: if isAdmin() && (
        (resource != null  && resource.data.schoolId == mySchool()) ||
        (request.resource != null && request.resource.data.schoolId == mySchool())
      );

      // drivers can query for their own bus by driverId
      allow list: if isDriver() && request.query.driverId == request.auth.uid;
      
      // drivers can directly get their own bus document
      allow get: if isDriver() && resource.data.driverId == request.auth.uid;
    }

    // ---------- trips ----------
    match /trips/{id} {
      // admin full control in their school
      allow read, write: if isAdmin() && (
        (resource != null  && resource.data.schoolId == mySchool()) ||
        (request.resource != null && request.resource.data.schoolId == mySchool())
      );

      // drivers: create/update/read only their trips in their school
      allow create: if isDriver()
        && request.resource.data.driverId == request.auth.uid
        && request.resource.data.schoolId == mySchool();

      allow read, update: if isDriver()
        && resource.data.driverId == request.auth.uid
        && resource.data.schoolId == mySchool();
    }
  }
}
