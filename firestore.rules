
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isSchoolMember(schoolId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == schoolId;
    }

    // --- Global ---
    match /{document=**} {
      allow read, write: if false; // Default deny
    }

    // --- Users ---
    match /users/{userId} {
      // Admins can manage all users in their school
      allow read, write: if isAuth() && isRole('admin') && isSchoolMember(resource.data.schoolId);
      // Users can read their own profile
      allow read: if isAuth() && request.auth.uid == userId;
    }

    // --- Schools (Read-only reference data) ---
    match /schools/{schoolId} {
      allow read: if isAuth();
    }
    
    // --- Students & Parents ---
    match /students/{studentId} {
      allow read, write: if isAuth() && isRole('admin') && isSchoolMember(resource.data.schoolId);
    }
    
    match /parentStudents/{parentId} {
        // Admins can manage all links in their school
        allow read, write: if isAuth() && isRole('admin') && isSchoolMember(resource.data.schoolId);
        // Parents can read their own student links
        allow read: if isAuth() && request.auth.uid == parentId;
    }

    // --- Buses & Routes (Admin-managed) ---
    match /buses/{busId} {
      allow read, write: if isAuth() && isRole('admin') && isSchoolMember(resource.data.schoolId);
      allow read: if isAuth() && (isRole('driver') || isRole('supervisor')) && isSchoolMember(resource.data.schoolId);
    }

    match /routes/{routeId} {
      allow read, write: if isAuth() && isRole('admin') && isSchoolMember(resource.data.schoolId);
      allow read: if isAuth() && (isRole('driver') || isRole('supervisor')) && isSchoolMember(resource.data.schoolId);
    }
    
    // --- Trips ---
    match /trips/{tripId} {
      allow read: if isAuth() && isSchoolMember(resource.data.schoolId);
      
      // Creating trips: drivers, supervisors, or admins
      allow create: if isAuth() && (isRole('driver') || isRole('supervisor') || isRole('admin'));

      // Updating trips: only specific roles on their school's trips
      allow update: if isAuth() && isSchoolMember(resource.data.schoolId) && (
        isRole('admin') || 
        (isRole('supervisor') && request.auth.uid == resource.data.supervisorId) ||
        (isRole('driver') && request.auth.uid == resource.data.driverId)
      );
      
      // --- Passengers Subcollection ---
      match /passengers/{passengerId} {
          allow read: if isAuth() && isSchoolMember(get(/databases/$(database)/documents/trips/$(tripId)).data.schoolId);
          
          allow create, update: if isAuth() && isSchoolMember(get(/databases/$(database)/documents/trips/$(tripId)).data.schoolId) && (
            isRole('admin') ||
            (isRole('supervisor') && request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.supervisorId) ||
            // Driver can update if they are the trip driver AND they are allowed to supervise
            (isRole('driver') && request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.driverId && get(/databases/$(database)/documents/trips/$(tripId)).data.allowDriverAsSupervisor == true)
          );
      }
    }
    
     // --- Notifications Subcollection ---
    match /users/{userId}/notifications/{notificationId} {
        // Users can read/write their own notifications
        allow read, write: if isAuth() && request.auth.uid == userId;
    }
  }
}
