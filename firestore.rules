rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    function myUid() {
      return request.auth.uid;
    }
    function me() {
      // Use get() on the user's own document.
      // Use `exists()` to prevent errors on new user creation.
      return getAfter(/databases/$(database)/documents/users/$(myUid())).data;
    }
    function mySchool() {
      return me().schoolId;
    }
    function isAdmin() {
      return me().role == 'admin';
    }
     function isDriver() {
      return me().role == 'driver';
    }
    function isSupervisor() {
      return me().role == 'supervisor';
    }
    function isParent() {
      return me().role == 'parent';
    }
    
    // --- User profile rules ---
    match /users/{uid} {
      // Allow users to read and update their own profile.
      allow read, update: if uid == myUid();
      // Admins can list all users in their school.
      allow list: if isAdmin() && mySchool() != null;
      // Allow user creation for sign-up flows.
      allow create: if !isSignedIn();
      
      // Inbox subcollection for notifications.
      match /inbox/{inboxId} {
        allow read, write: if uid == myUid(); // Only the user can access their own inbox.
      }
    }
    
    // --- School-specific data ---
    match /schools/{schoolId} {
      allow read: if isSignedIn();
    }
    
    // --- Parent-Student Links ---
    match /parentStudents/{parentId} {
        allow read, write: if parentId == myUid() || isAdmin();
    }
    
    // --- Students ---
    match /students/{studentId} {
      allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
      
      // Drivers/Supervisors can list all students in their school to build rosters
      allow list: if (isDriver() || isSupervisor()) && mySchool() != null;
      
      // Can read individual student docs if they belong to the same school
      allow read: if (isAdmin() || isDriver() || isSupervisor())
        && resource.data.schoolId == mySchool();
    }
    
    // --- Routes ---
    match /routes/{routeId} {
      allow read, list: if isSignedIn() && resource.data.schoolId == mySchool();
      allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }
    
    // --- Buses ---
    match /buses/{busId} {
        allow read, list: if isSignedIn() && resource.data.schoolId == mySchool();
        allow write: if isAdmin() && request.resource.data.schoolId == mySchool();
    }
    
    // --- Trips and Passengers ---
    match /trips/{tripId} {
        allow read: if isSignedIn() && resource.data.schoolId == mySchool();
        allow create: if isDriver(); // Drivers can start trips
        allow update: if (isDriver() && resource.data.driverId == myUid())
                       || (isSupervisor() && resource.data.supervisorId == myUid())
                       || isAdmin();

        match /passengers/{passengerId} {
           allow read: if (isDriver() && get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == myUid()) ||
                         (isSupervisor() && get(/databases/$(database)/documents/trips/$(tripId)).data.supervisorId == myUid()) ||
                         (isParent() && passengerId in me().linkedStudentIds) || // Hypothetical parent field
                         isAdmin();

           allow write: if ((isDriver() && get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == myUid()) && get(/databases/$(database)/documents/trips/$(tripId)).data.allowDriverAsSupervisor == true) ||
                          (isSupervisor() && get(/databases/$(database)/documents/trips/$(tripId)).data.supervisorId == myUid()) ||
                          isAdmin();
        }
    }
  }
}
