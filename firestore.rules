rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // --- Helpers ---
    function authed() {
      return request.auth != null;
    }

    function getUserProfile(uid) {
      return get(/databases/$(db)/documents/users/$(uid));
    }

    function isSchoolAdmin(schoolId) {
      let userProfile = getUserProfile(request.auth.uid).data;
      return authed() && userProfile.role == 'admin' && userProfile.schoolId == schoolId;
    }
    
    function isOwnProfile(uid) {
        return authed() && request.auth.uid == uid;
    }

    // --- Collections ---
    match /users/{userId} {
      // Admins can manage any user within their own school.
      // Users can read their own profile.
      allow read, write: if isSchoolAdmin(request.resource.data.schoolId) || isSchoolAdmin(resource.data.schoolId);
      allow get: if isOwnProfile(userId);
      allow list: if isSchoolAdmin(request.query.schoolId);
    }

    match /routes/{routeId} {
      // Admins have full control over routes in their school.
      allow read, write: if isSchoolAdmin(request.resource.data.schoolId) || isSchoolAdmin(resource.data.schoolId);
      allow list: if isSchoolAdmin(request.query.schoolId);

      // Drivers can read routes in their school.
      allow get: if authed() && getUserProfile(request.auth.uid).data.schoolId == resource.data.schoolId;
    }

    match /buses/{busId} {
      // Admins have full control over buses in their school.
      allow read, write: if isSchoolAmdin(request.resource.data.schoolId) || isSchoolAdmin(resource.data.schoolId);
      allow list: if isSchoolAdmin(request.query.schoolId);
      
      // Drivers can read their assigned bus.
      allow get: if authed() && resource.data.driverId == request.auth.uid;
      // Drivers can be queried for their bus.
      allow list: if authed() && request.query.driverId == request.auth.uid;
    }

    match /trips/{tripId} {
      // Admins have full control over trips in their school.
      allow read, write: if isSchoolAdmin(request.resource.data.schoolId) || isSchoolAdmin(resource.data.schoolId);
      allow list: if isSchoolAdmin(request.query.schoolId);
      
      // Drivers can create, read, and update their own trips.
      allow create: if authed() && request.resource.data.driverId == request.auth.uid;
      allow read, update: if authed() && resource.data.driverId == request.auth.uid;
    }
  }
}
