rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isAuthOwner(uid) {
      return isAuth() && request.auth.uid == uid;
    }
    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    function getSchoolId(uid) {
        return get(/databases/$(database)/documents/users/$(uid)).data.schoolId;
    }

    // --- Users Collection ---
    // Users can read their own profile.
    // Admins can list all users in their school.
    match /users/{userId} {
      allow read: if isAuth() && 
                    (isAuthOwner(userId) || 
                     (getRole(request.auth.uid) == 'admin' && getSchoolId(request.auth.uid) == resource.data.schoolId));
      allow write: if isAuth() && getRole(request.auth.uid) == 'admin'; // Admins can manage users
    }

    // --- Routes Collection ---
    // Admins can manage routes within their own school.
    match /routes/{routeId} {
        allow read, write: if isAuth() && getRole(request.auth.uid) == 'admin' && getSchoolId(request.auth.uid) == resource.data.schoolId;
    }

    // --- Buses Collection ---
    // Admins can manage buses.
    // Drivers can read their assigned bus.
    match /buses/{busId} {
        allow read: if isAuth() && 
                    ( (getRole(request.auth.uid) == 'admin' && getSchoolId(request.auth.uid) == resource.data.schoolId) ||
                      (getRole(request.auth.uid) == 'driver' && resource.data.driverId == request.auth.uid) );
        allow write: if isAuth() && getRole(request.auth.uid) == 'admin';
    }

    // --- Trips Collection ---
    // Drivers can create their own trips and update/read them.
    // Admins can read trips within their school.
    match /trips/{tripId} {
        allow read: if isAuth() &&
                    ( (getRole(request.auth.uid) == 'admin' && getSchoolId(request.auth.uid) == resource.data.schoolId) ||
                      (isAuthOwner(resource.data.driverId)) );
        allow create: if isAuth() && getRole(request.auth.uid) == 'driver';
        allow update: if isAuth() && isAuthOwner(resource.data.driverId);
    }
  }
}