rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Deny all reads/writes by default.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Helper functions to check user's role and school from their token claims.
    function isAuth() {
      return request.auth != null;
    }
    function schoolId() {
      return request.auth.token.schoolId;
    }
    function isRole(role) {
      return request.auth.token.role == role;
    }
    function isRoleIn(roles) {
      return request.auth.token.role in roles;
    }
    function isUser(uid) {
      return isAuth() && request.auth.uid == uid;
    }
    function isMemberOf(schId) {
      return isAuth() && schoolId() == schId;
    }
    function isAdminOf(schId) {
      return isMemberOf(schId) && isRole('admin');
    }
    function isDriverOf(schId) {
      return isMemberOf(schId) && isRole('driver');
    }
    function isSupervisorOf(schId) {
       return isMemberOf(schId) && isRole('supervisor');
    }
    
    // Allow users to read their own index entry to find their school.
    match /usersIndex/{uid} {
      allow get: if isUser(uid);
    }
    
    // Lock down the user collection. Only admins can manage users.
    // Individual users can read their own profile.
    match /users/{uid} {
       allow get: if isUser(uid);
       allow list, write: if isAdminOf(schoolId());
    }

    // --- School-Scoped Data ---
    // All primary data is stored under /schools/{schoolId}/
    match /schools/{schId} {
      // Allow any authenticated member of the school to read the school doc itself.
      allow get: if isMemberOf(schId);
      
      // Admins have full control over their school's data.
      match /{coll}/{docId} {
        allow read, write: if isAdminOf(schId);
      }
      
      // Drivers can list buses to find their own.
      match /buses/{busId} {
        allow list: if isDriverOf(schId);
      }
      
      // Drivers can list their trips for the day.
      match /trips/{tripId} {
        allow list: if isDriverOf(schId) || isSupervisorOf(schId);
        allow get: if isMemberOf(schId) && isRoleIn(['driver', 'supervisor', 'admin']);
        
        // Passengers subcollection
        match /passengers/{studentId} {
           allow read, write: if isMemberOf(schId) && isRoleIn(['driver', 'supervisor', 'admin']);
        }
      }
      
      // Users can read other users in their school (e.g., to get a supervisor's name).
      match /users/{uid} {
        allow get: if isMemberOf(schId);
      }
      
      // Parents can read their own link document.
      match /parentStudents/{uid} {
        allow get: if isUser(uid) && isMemberOf(schId);
      }
    }
  }
}
