rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Checks if the requesting user has the 'admin' role for a specific school.
    function isSchoolAdmin(schoolId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null &&
             userDoc.role == 'admin' &&
             userDoc.schoolId == schoolId;
    }

    // Checks if the resource being written belongs to the admin's school.
    function isResourceForAdminsSchool(schoolId) {
        return request.resource.data.schoolId == schoolId;
    }

    // --- Collection Rules ---

    match /users/{userId} {
      // Admins can manage all users in their school.
      // Users can read their own profile.
      allow read: if isSchoolAdmin(resource.data.schoolId) || request.auth.uid == userId;

      // Admins can write to any user document in their school.
      allow write: if isSchoolAdmin(request.resource.data.schoolId);
    }

    match /routes/{routeId} {
      // Admins can manage all routes in their school.
      allow read, write: if isSchoolAdmin(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId);
    }

    match /buses/{busId} {
      // Drivers can read their own assigned bus.
      // Admins can manage all buses in their school.
      allow read: if (request.auth.uid == resource.data.driverId &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == resource.data.schoolId) ||
                    isSchoolAdmin(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId);

      allow write: if isSchoolAdmin(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId);
    }

    match /trips/{tripId} {
      // A user can only manage their own trips.
      allow read, write: if request.auth.uid == resource.data.driverId;
      allow create: if request.auth.uid == request.resource.data.driverId;
    }
  }
}
